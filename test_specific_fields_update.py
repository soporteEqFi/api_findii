#!/usr/bin/env python3
"""
Script de prueba espec√≠fico para verificar la actualizaci√≥n de campos individuales 
dentro del JSON de info_segundo_titular
"""

import requests
import json

# Configuraci√≥n de la API
API_BASE_URL = "http://localhost:5000"
UPDATE_ENDPOINT = f"{API_BASE_URL}/edit-record/"

def test_update_specific_fields():
    """
    Prueba la actualizaci√≥n con los campos espec√≠ficos mencionados por el usuario
    """
    
    # Datos de prueba con los campos exactos mencionados
    test_data = {
        "solicitante_id": 1,  # Cambiar por un ID v√°lido de la base de datos
        "PRODUCTO_SOLICITADO": {
            "info_segundo_titular": {
                "nombre": "FERNANDO",
                "tipo_documento": "CC",
                "numero_documento": "565",
                "fecha_nacimiento": "2025-07-31",
                "estado_civil": "casado",
                "personas_a_cargo": "5",
                "numero_celular": "566",
                "correo_electronico": "claraorozco019@gmail.com",
                "nivel_estudio": "primaria",
                "profesion": "5656"
            }
        }
    }
    
    print("üß™ Prueba de actualizaci√≥n con campos espec√≠ficos del JSON")
    print(f"üì° Endpoint: {UPDATE_ENDPOINT}")
    print(f"üìä Datos de prueba:")
    print(json.dumps(test_data, indent=2, ensure_ascii=False))
    
    try:
        response = requests.put(
            UPDATE_ENDPOINT,
            json=test_data,
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"\nüì• Respuesta del servidor:")
        print(f"   Status Code: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ Actualizaci√≥n exitosa!")
            response_data = response.json()
            print(f"   Respuesta: {json.dumps(response_data, indent=2, ensure_ascii=False)}")
            
            # Verificar que se actualizaron los datos correctamente
            print("\nüîç Verificando campos actualizados:")
            for campo, valor in test_data["PRODUCTO_SOLICITADO"]["info_segundo_titular"].items():
                print(f"   ‚úÖ {campo}: {valor}")
        else:
            print(f"‚ùå Error en la actualizaci√≥n")
            try:
                error_data = response.json()
                print(f"   Error: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
            except:
                print(f"   Error: {response.text}")
                
    except requests.exceptions.ConnectionError:
        print("‚ùå Error de conexi√≥n: No se pudo conectar al servidor")
        print("   Aseg√∫rate de que la API est√© ejecut√°ndose en http://localhost:5000")
    except Exception as e:
        print(f"‚ùå Error inesperado: {str(e)}")

def test_update_partial_json():
    """
    Prueba la actualizaci√≥n con solo algunos campos del JSON
    """
    
    test_data = {
        "solicitante_id": 1,  # Cambiar por un ID v√°lido de la base de datos
        "PRODUCTO_SOLICITADO": {
            "info_segundo_titular": {
                "nombre": "FERNANDO",
                "tipo_documento": "CC",
                "numero_documento": "565"
            }
        }
    }
    
    print("\nüß™ Prueba de actualizaci√≥n parcial del JSON")
    print(f"üìä Datos de prueba (solo 3 campos):")
    print(json.dumps(test_data, indent=2, ensure_ascii=False))
    
    try:
        response = requests.put(
            UPDATE_ENDPOINT,
            json=test_data,
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"   Status Code: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ Actualizaci√≥n parcial exitosa!")
            print("   Solo se actualizaron: nombre, tipo_documento, numero_documento")
        else:
            print(f"‚ùå Error: {response.text}")
            
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")

def test_update_single_field():
    """
    Prueba la actualizaci√≥n con un solo campo del JSON
    """
    
    test_data = {
        "solicitante_id": 1,  # Cambiar por un ID v√°lido de la base de datos
        "PRODUCTO_SOLICITADO": {
            "info_segundo_titular": {
                "nombre": "FERNANDO_ACTUALIZADO"
            }
        }
    }
    
    print("\nüß™ Prueba de actualizaci√≥n de un solo campo")
    print(f"üìä Datos de prueba (solo nombre):")
    print(json.dumps(test_data, indent=2, ensure_ascii=False))
    
    try:
        response = requests.put(
            UPDATE_ENDPOINT,
            json=test_data,
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"   Status Code: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ Actualizaci√≥n de un solo campo exitosa!")
            print("   Solo se actualiz√≥: nombre")
        else:
            print(f"‚ùå Error: {response.text}")
            
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")

def test_update_with_second_titular():
    """
    Prueba la actualizaci√≥n incluyendo tambi√©n el campo segundo_titular
    """
    
    test_data = {
        "solicitante_id": 1,  # Cambiar por un ID v√°lido de la base de datos
        "PRODUCTO_SOLICITADO": {
            "segundo_titular": "si",
            "info_segundo_titular": {
                "nombre": "FERNANDO",
                "tipo_documento": "CC",
                "numero_documento": "565",
                "fecha_nacimiento": "2025-07-31",
                "estado_civil": "casado",
                "personas_a_cargo": "5",
                "numero_celular": "566",
                "correo_electronico": "claraorozco019@gmail.com",
                "nivel_estudio": "primaria",
                "profesion": "5656"
            }
        }
    }
    
    print("\nüß™ Prueba de actualizaci√≥n con segundo_titular e info_segundo_titular")
    print(f"üìä Datos de prueba:")
    print(json.dumps(test_data, indent=2, ensure_ascii=False))
    
    try:
        response = requests.put(
            UPDATE_ENDPOINT,
            json=test_data,
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"   Status Code: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ Actualizaci√≥n completa exitosa!")
            print("   Se actualizaron: segundo_titular e info_segundo_titular")
        else:
            print(f"‚ùå Error: {response.text}")
            
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")

def test_verify_database_update():
    """
    Prueba para verificar que los datos se actualizaron correctamente en la base de datos
    """
    
    print("\nüîç Verificaci√≥n de actualizaci√≥n en base de datos")
    print("   Esta prueba requiere que ejecutes manualmente una consulta a la base de datos")
    print("   para verificar que los campos se actualizaron correctamente.")
    print("\nüìã Campos que deber√≠an estar en la base de datos:")
    print("   - nombre: FERNANDO")
    print("   - tipo_documento: CC")
    print("   - numero_documento: 565")
    print("   - fecha_nacimiento: 2025-07-31")
    print("   - estado_civil: casado")
    print("   - personas_a_cargo: 5")
    print("   - numero_celular: 566")
    print("   - correo_electronico: claraorozco019@gmail.com")
    print("   - nivel_estudio: primaria")
    print("   - profesion: 5656")

if __name__ == "__main__":
    print("üöÄ Script de prueba espec√≠fico para campos del JSON info_segundo_titular")
    print("=" * 70)
    
    # Ejecutar todas las pruebas
    test_update_specific_fields()
    test_update_partial_json()
    test_update_single_field()
    test_update_with_second_titular()
    test_verify_database_update()
    
    print("\n" + "=" * 70)
    print("üèÅ Pruebas completadas")
    print("\nüìù Notas importantes:")
    print("   - Cambia el 'solicitante_id' por un ID v√°lido de tu base de datos")
    print("   - Aseg√∫rate de que la API est√© ejecut√°ndose")
    print("   - Revisa los logs del servidor para ver los mensajes de debug")
    print("   - El sistema debe manejar JSON completo, parcial y campos individuales")
    print("\nüîç Campos espec√≠ficos del JSON de prueba:")
    print("   ‚úÖ nombre: FERNANDO")
    print("   ‚úÖ tipo_documento: CC")
    print("   ‚úÖ numero_documento: 565")
    print("   ‚úÖ fecha_nacimiento: 2025-07-31")
    print("   ‚úÖ estado_civil: casado")
    print("   ‚úÖ personas_a_cargo: 5")
    print("   ‚úÖ numero_celular: 566")
    print("   ‚úÖ correo_electronico: claraorozco019@gmail.com")
    print("   ‚úÖ nivel_estudio: primaria")
    print("   ‚úÖ profesion: 5656")
